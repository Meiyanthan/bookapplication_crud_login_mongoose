{
  "_from": "express-sanitizer",
  "_id": "express-sanitizer@1.0.5",
  "_inBundle": false,
  "_integrity": "sha512-48/Tf1DZ7JklRVTcXQLHAxhq4GNJTuHq2jjIYhyTmu0Bw+X06YPDD/e/tdn1QLYk706xw4N8JFxtjslRrDGb8g==",
  "_location": "/express-sanitizer",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "express-sanitizer",
    "fetchSpec": "latest",
    "name": "express-sanitizer",
    "raw": "express-sanitizer",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/express-sanitizer/-/express-sanitizer-1.0.5.tgz",
  "_shasum": "1622e250dbc8ac7f0986fcbcb0be13627d164047",
  "_shrinkwrap": null,
  "_spec": "express-sanitizer",
  "_where": "/var/www/html/nodejs/nov19/mongoose-express-CRUD",
  "author": {
    "email": "20metresbelow@gmail.com",
    "name": "Mark Andrews"
  },
  "bugs": {
    "url": "https://github.com/markau/express-sanitizer/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "sanitizer": "0.1.3",
    "underscore": "1.8.3"
  },
  "deprecated": false,
  "description": "Express middleware for the sanitizer module.",
  "devDependencies": {
    "assert": "^1.4.1",
    "expect": "^24.0.0",
    "express": "^4.16.4",
    "mocha": "^5.2.0",
    "node-mocks-http": "^1.7.3",
    "supertest": "^3.4.2"
  },
  "engines": {
    "node": "*"
  },
  "homepage": "https://github.com/markau/express-sanitizer",
  "keywords": [
    "express",
    "sanitization",
    "sanitize",
    "xss"
  ],
  "license": "MIT",
  "main": "./index.js",
  "name": "express-sanitizer",
  "optionalDependencies": {},
  "readme": "[![npm](https://img.shields.io/npm/dm/express-sanitizer.svg?style=flat-square)](https://github.com/markau/express-sanitizer)\r\n[![npm](https://img.shields.io/npm/v/express-sanitizer.svg?style=flat-square)](https://github.com/markau/express-sanitizer)\r\n[![Build Status](https://travis-ci.org/markau/express-sanitizer.png?branch=master&style=flat-square)](https://travis-ci.org/markau/express-sanitizer)\r\n[![npm](https://img.shields.io/npm/l/express.svg?style=flat-square)](https://github.com/markau/express-sanitizer)\r\n[![dependencies](https://david-dm.org/markau/express-sanitizer.svg?style=flat-square)](https://david-dm.org/markau/express-sanitizer)\r\n\r\n# express-sanitizer\r\n\r\nAn express middleware for [Caja-HTML-Sanitizer](https://github.com/theSmaw/Caja-HTML-Sanitizer), which wraps [Google Caja sanitizer](https://code.google.com/p/google-caja/wiki/JsHtmlSanitizer).\r\n\r\nA useful complement to the [express-validator](https://github.com/ctavan/express-validator) -- to fill a gap now that XSS sanitization support has been removed from that module's parent [node-validator](https://github.com/chriso/node-validator).\r\n\r\n## Installation\r\n\r\n```\r\nyarn add express-sanitizer\r\n```\r\n\r\nor\r\n\r\n```\r\nnpm install --save express-sanitizer\r\n```\r\n\r\n## Usage\r\n\r\nImport the module\r\n\r\n```javascript\r\nconst expressSanitizer = require('express-sanitizer');\r\n```\r\n\r\nMount the middleware *below* the `express.json()` (or, prior to express v4.16, `bodyParser()`) instantiation and *above* mounting of your routes\r\n\r\n```javascript\r\napp.use(express.json());\r\n\r\n// Mount express-sanitizer middleware here\r\napp.use(expressSanitizer());\r\n\r\napp.post('/', function(req, res, next) {\r\n  // replace an HTTP posted body property with the sanitized string\r\n  const sanitizedString = req.sanitize(req.body.propertyToSanitize);\r\n  // send the response -- res.body.sanitized = \" world\"\r\n  res.send({ sanitized: sanitizedString });\r\n});\r\n```\r\n\r\n## Output\r\n\r\nThe string\r\n```javascript\r\n'<script>hello</script> world'\r\n```\r\nwill be sanitized to ' world'.\r\n\r\n## Limitations\r\n\r\nThis is a basic implementation of [Caja-HTML-Sanitizer](https://github.com/theSmaw/Caja-HTML-Sanitizer) with the specific purpose of mitigating against persistent XSS risks (note the borderline abandonware comments in that repo).\r\n\r\n## Caveats\r\n\r\nThis module trusts the dependencies to provide basic persistent XSS risk mitigation. A user of this package should review all packages and make their own decision on security and fitness for purpose.\r\n\r\n## Changelog\r\n\r\n### v1.0.5\r\n- Unit tests (better late than never)\r\n\r\n### v1.0.4\r\n- Merged PR #3 from Brian M. Jemilo II\r\n\r\n### v1.0.3\r\n- Updated README to base example on an express-generator scaffolded application\r\n\r\n### v1.0.2\r\n- Updated sanitizer dependency to 0.1.3\r\n- Merged PR #4 from @ScottRamsden\r\n\r\n### v1.0.1\r\n- Updated sanitizer dependency to 0.1.2\r\n\r\n### v1.0.0\r\n- Update to v1\r\n\r\n### v0.1.1\r\n- Merged PR removing unused dependency\r\n\r\n### v0.1.0\r\n- Initial release\r\n\r\n## Contributors\r\n\r\n- Mark Andrews <20metresbelow@gmail.com>\r\n- Patrick Hogan <patrick@callinize.com>\r\n- Scott Ramsden @ScottRamsden\r\n- Brian M. Jemilo II <jemiloii@jemiloii.com>\r\n\r\n## License\r\n\r\nCopyright (c) 2019 Mark Andrews <20metresbelow@gmail.com>, MIT License\r\n\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/markau/express-sanitizer.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "1.0.5"
}
